<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Call_logging_invocable</name>
        <label>Call logging invocable</label>
        <locationX>176</locationX>
        <locationY>194</locationY>
        <actionName>LogFlowExecutionErrorEventHandler</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowErrorEvents</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <description
    >`FlowExecutionErrorEvent` messages are created and fired by the platform when Screen Flows have unhandled errors, but Apex can&apos;t subscribe to them, so we use this platform event-driven Flow to call an Apex action to log errors. Subscribers can enable this functionality using a Logger Parameter: &quot;Is FlowExecutionErrorEvent Handled?&quot;</description>
    <interviewLabel>Nebula Logger: Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Nebula Logger: Flow Execution Error Event Handling</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Call_logging_invocable</targetReference>
        </connector>
        <object>FlowExecutionErrorEvent</object>
        <triggerType>PlatformEvent</triggerType>
    </start>
    <status>Active</status>
</Flow>
