# Pipeline for Nebula Logger
name: Deployment

on:
    push:
        branches:
            - main
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'Contributing.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'
    pull_request:
        types: [opened, synchronize, reopened]
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'Contributing.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'

jobs:
    code-quality-tests:
        name: 'Code Quality Tests'
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Setup node'
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: 'Install npm'
              run: npm install

            - name: 'Prettier code formatting verification'
              run: npm run prettier:verify

            # TODO setup ESLint plugin - https://github.com/salesforce/eslint-plugin-lwc
            # Lint LWC
            # - name: 'Lint Lightning Web Components'
            #   run: npm run lint:lwc
            # LWC unit tests

            # TODO setup apex-scanner and PMD rules - https://github.com/forcedotcom/sfdx-scanner
            # - name: Install & run SFDX Scanner
            #   run: |
            #       sfdx plugins:install @salesforce/sfdx-scanner
            #       sfdx scanner:run --pmdconfig config/pmd-ruleset.xml --target . --engine pmd --severity-threshold 3

    lwc-tests:
        name: 'LWC Tests'
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Setup node'
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: 'Install npm'
              run: npm install

            - name: Install Salesforce CLI
              run: npm install sfdx-cli --global

            - name: 'Run LWC Tests'
              run: npm run test:lwc

              # Upload code coverage data for LWC
              # TODO Fix Apex codecov issues & uncomment
            # - name: 'Upload code coverage for LWC to Codecov.io'
            #   uses: codecov/codecov-action@v2.0.2
            #   with:
            #       token: ${{ secrets.CODECOV_TOKEN }}
            #       flags: LWC

    scratch-org-tests:
        name: 'Scratch Org Tests'
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Setup node'
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: 'Install npm'
              run: npm install

            - name: Install Salesforce CLI
              run: npm install sfdx-cli --global

            - name: 'Populate DevHub Auth Files'
              shell: bash
              run: |
                  echo ${{ env.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  echo ${{ env.NEBULA_CI_DEVHUB_SFDX_URL }} > ./NEBULA_CI_DEVHUB_SFDX_URL.txt
                  echo ${{ env.JONGPIE_DEVHUB_SFDX_URL }} > ./JONGPIE_DEVHUB_SFDX_URL.txt
              env:
                  DEVHUB_SFDX_URL: ${{ secrets.DEVHUB_SFDX_URL }}
                  NEBULA_CI_DEVHUB_SFDX_URL: ${{ secrets.NEBULA_CI_DEVHUB_SFDX_URL }}
                  JONGPIE_DEVHUB_SFDX_URL: ${{ secrets.JONGPIE_DEVHUB_SFDX_URL }}

            - name: 'Authorize Dev Hubs'
              run: |
                  sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_URL.txt --setalias nebula-logger-packaging --setdefaultdevhubusername
                  sfdx auth:sfdxurl:store --sfdxurlfile ./NEBULA_CI_DEVHUB_SFDX_URL.txt --setalias nebula-ci-devhub
                  sfdx auth:sfdxurl:store --sfdxurlfile ./JONGPIE_DEVHUB_SFDX_URL.txt --setalias jongpie-devhub

            - name: 'Create Scratch Org with Experience Sites Enabled'
              run: npm run org:create:experience -- -durationdays 1 -devhubs nebula-logger-packaging,nebula-ci-devhub,jongpie-devhub

            - name: 'Create Test Experience Site'
              run: npm run experience:create

            - name: 'Wait for Experience Site creation'
              uses: maddox/actions/sleep@master
              with:
                  args: '120'

            - name: 'Push Metadata'
              run: sfdx force:source:push

            - name: 'Run Apex Tests'
              run: npm run test:apex

            # Delete test files that Codecov is unable to parse
            # - name: 'Delete unsupported code coverage files'
            #   run: rm ./tests/apex/test-result-707*-codecoverage.json

            # Upload code coverage data for Apex
            # TODO Fix Apex codecov issues & uncomment
            # - name: 'Upload code coverage for Apex to Codecov.io'
            #   uses: codecov/codecov-action@v2.0.2
            #   with:
            #       token: ${{ secrets.CODECOV_TOKEN }}
            #       flags: Apex

            - name: 'Delete Scratch Org'
              run: npm run org:delete:noprompt
              if: ${{ always() }}

    # TODO finish auto-creation & promotion of unlocked package + committing changes to docs
    # create-package-version:
    #     name: 'Create Package Version'
    #     needs: [code-quality-tests, lwc-tests, scratch-org-tests]
    #     runs-on: ubuntu-latest
    #     environment: Test
    #     steps:
    #         # Checkout the code
    #         - name: 'Checkout source code'
    #           uses: actions/checkout@v2

    #         - name: 'Setup node'
    #           uses: actions/setup-node@v2
    #           with:
    #               node-version: '14'

    #         - name: 'Install npm'
    #           run: npm install

    #         - name: 'Generate Docs'
    #           run: npm run docs:generate
    # TODO need to commit & push any changes to ./docs/*

    # TODO uncomment
    # - name: 'Create unlocked package version'
    #   run: npm run package:version:create:unlocked
